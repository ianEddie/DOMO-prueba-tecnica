---
import { HEADER_DATA } from '@/constants/header-data'
import animation from '@/animations/hover-scale.module.css'
import CardIcon from '@/icons/card-icon.astro'
---

<header transition:animate='none'>
  <!-- Logo -->
  <a href='#home'>coomplet labs</a>
  <!-- Toggle Action -->
  <label for='menu'></label>
  <input type='checkbox' id='menu' />
  <!-- nav -->
  <nav>
    {
      HEADER_DATA.map(({ name, value, color }, index) => (
        <a
          href={value}
          class={animation.hoverScale}
          style={{ color: `${color}` }}
        >
          {index === HEADER_DATA.length - 1 && <CardIcon />}
          {name}
        </a>
      ))
    }
  </nav>
  <!-- Toggle Button  -->
  <div>
    <button class='btn'>.</button>
  </div>
</header>
<style>
  /* Desktop */
  header {
    z-index: 20;
    width: 100%;
    padding-inline: 200px;
    padding-top: 40px;
    position: fixed;
    display: flex;
    justify-content: space-between;
    animation: header linear both;
    animation-timeline: scroll(root);
    animation-range: entry 1% cover 30%;
  }
  span {
    color: var(--text-color-primary);
    font-weight: 500;
  }
  nav {
    display: flex;
    align-items: center;
    column-gap: 22px;
  }
  a {
    color: var(--text-color-primary);
    display: flex;
    align-items: center;
    column-gap: 7px;
    text-decoration: none;
    font-size: 14px;
  }

  @keyframes header {
    from {
      background-color: transparent;
    }
    to {
      backdrop-filter: blur(15px);
      background-color: var(--bg-color-tertiary);
      padding-block: 10px;
      box-shadow: 0px 5px 30px 1px var(--bg-color-tertiary);
    }
  }
  label,
  input,
  div {
    display: none;
  }
  /* Phone */
  @media screen and (max-width: 900px) {
    header {
      width: 100%;
      padding-inline: 25px;
      padding-top: 10px;
      display: flex;
      justify-content: space-between;
    }

    div {
      border: none;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    button {
      color: transparent;
      width: 2.5rem;
      z-index: 30;
      transition: all 0.3s ease-in-out;
      height: 100%;
    }

    #menu:not(:checked) ~ div > button {
      background-image: url('/assets/menu-open.svg');
      background-position: center center;
      background-repeat: no-repeat;
    }

    #menu:checked ~ div > button {
      background-image: url('/assets/menu-close.svg');
      background-position: center center;
      background-repeat: no-repeat;
    }

    label {
      background-color: transparent;
      display: flex;
      width: 3em;
      height: 100%;
      position: absolute;
      z-index: 40;
      top: 0;
      right: 1.5em;
      cursor: pointer;
    }

    nav {
      background-color: var(--bg-color-tertiary);
      clip-path: circle(0 at center);
      transition: clip-path 0.7s ease-in-out;
      position: absolute;
      top: 0;
      right: 0;
      width: 100%;
      height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 2.5em;
      z-index: 30;
    }

    input:checked + nav {
      clip-path: circle(100% at center);
    }

    button,
    button[type='button'],
    button[type='submit'],
    button[type='reset'] {
      display: flex;
    }
  }
</style>
<script>
  const menuLinks = document.querySelectorAll('nav a')
  menuLinks.forEach((enlace) => {
    enlace.addEventListener('click', () => {
      const checkboxMenu = document.getElementById('menu') as HTMLInputElement
      checkboxMenu.checked = false
    })
  })
</script>
